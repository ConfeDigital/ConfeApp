# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - confe-lin-webapp

on:
  push:
    branches:
      - stg
    paths:
      - 'backend/**'
      - '.github/workflows/stg_confe-lin-webapp.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Create and activate virtual environment
        run: |
          cd backend
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Collect static files
        run: |
          cd backend
          source venv/bin/activate
          python manage.py collectstatic --noinput
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Prepare deployment package
        run: |
          cd backend
          chmod +x startup.sh
          # Create a clean deployment directory
          mkdir -p ../deployment
          # Copy all backend files to deployment directory (including venv)
          cp -r . ../deployment/
          # Ensure startup.sh is executable in the deployment directory
          chmod +x ../deployment/startup.sh
          # Create zip from deployment directory
          cd ../deployment
          # Use zip with proper permissions preservation, but include venv
          zip -r ../backend/release.zip . -x "*.pyc" "__pycache__/*" "*.log" "celerybeat-schedule.db" "*.git*" "test_*" "tests/*"
          # Clean up temporary directory
          cd ..
          rm -rf deployment

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app-${{ github.run_number }}
          path: backend/release.zip
          retention-days: 10  # Keep artifacts for only 7 days

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app-${{ github.run_number }}

      - name: Unzip artifact for deployment
        run: |
          unzip release.zip
          # Ensure startup.sh is executable and has proper permissions
          chmod +x startup.sh
          # Verify startup.sh exists and is executable
          ls -la startup.sh
          # Debug: Show package contents
          echo "=== Package Contents ==="
          ls -la
          echo "========================"
          # Verify critical files exist
          echo "=== Critical Files Check ==="
          ls -la manage.py
          ls -la backend/
          echo "============================"

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'confe-lin-webapp'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_9FCFC18F720B4177B65FCAD2F702E3FA }}
          package: '.'
          startup-command: './startup.sh'