# Generated by Django 5.2.3 on 2025-08-20 00:41

import django.core.validators
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('agencia', '0002_initial'),
        ('api', '0001_initial'),
        ('centros', '0001_initial'),
        ('discapacidad', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Domicile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_road', models.CharField(blank=True, max_length=50, null=True)),
                ('address_number', models.CharField(blank=True, max_length=8, null=True)),
                ('address_number_int', models.CharField(blank=True, max_length=8, null=True)),
                ('address_PC', models.CharField(blank=True, max_length=5, null=True)),
                ('address_municip', models.CharField(blank=True, max_length=128, null=True)),
                ('address_col', models.CharField(blank=True, max_length=128, null=True)),
                ('address_state', models.CharField(blank=True, max_length=128, null=True)),
                ('address_city', models.CharField(blank=True, max_length=128, null=True)),
                ('address_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('address_lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('residence_type', models.CharField(blank=True, choices=[('CASA', 'Casa'), ('DEPARTAMENTO', 'Departamento'), ('ALBERGUE', 'Albergue'), ('INSTITUCION', 'Institución (asilo, centro de atención, etc.)'), ('OTRO', 'Otro')], max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('dose', models.CharField(blank=True, max_length=100, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='centros.center')),
            ],
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('second_last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('relationship', models.CharField(choices=[('PADRE', 'Padre'), ('MADRE', 'Madre'), ('HERMANO', 'Hermano'), ('HERMANA', 'Hermana'), ('PAREJA', 'Pareja'), ('ABUELO', 'Abuelo'), ('ABUELA', 'Abuela'), ('HIJO', 'Hijo'), ('HIJA', 'Hija'), ('OTRO FAM', 'Otro Familiar'), ('AMIGO', 'Amigo'), ('AMIGA', 'Amiga'), ('OTRO', 'Otro')], max_length=20)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('lives_at_same_address', models.BooleanField(default=False)),
                ('domicile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='candidatos.domicile')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalUserProfile',
            fields=[
                ('photo', models.TextField(blank=True, max_length=100, null=True)),
                ('registration_date', models.DateField(blank=True, editable=False, null=True)),
                ('birth_date', models.DateField(null=True)),
                ('gender', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1, null=True)),
                ('stage', models.CharField(choices=[('Reg', 'Registro'), ('Pre', 'Preentrevista'), ('Ent', 'Entrevista'), ('Cap', 'Capacitación'), ('Agn', 'Agencia'), ('Can', 'Canalización')], default='Reg', max_length=3, null=True)),
                ('curp', models.CharField(blank=True, max_length=18, null=True, validators=[django.core.validators.RegexValidator('^[A-Z]{4}\\d{6}[HM][A-Z]{2}[B-DF-HJ-NP-TV-Z]{3}[A-Z0-9]\\d{1}$', 'Enter a valid CURP')])),
                ('has_disability_certificate', models.BooleanField(default=False)),
                ('has_interdiction_judgment', models.BooleanField(default=False)),
                ('receives_pension', models.CharField(blank=True, choices=[('No', 'No'), ('Bie', 'Bienestar'), ('Orf', 'Orfandad'), ('Otr', 'Otra')], max_length=3, null=True)),
                ('receives_psychological_care', models.BooleanField(default=False)),
                ('receives_psychiatric_care', models.BooleanField(default=False)),
                ('social_security', models.CharField(blank=True, choices=[('IMSS', 'IMSS'), ('ISSSTE', 'ISSSTE'), ('PEMEX', 'PEMEX'), ('IMSS-BIENESTAR', 'IMSS-Bienestar'), ('PARTICULAR', 'Particular'), ('OTRO', 'Otro'), ('NINGUNO', 'Ninguno')], max_length=20, null=True)),
                ('blood_type', models.CharField(blank=True, choices=[('', '---------'), ('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], default='', max_length=3, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('dietary_restrictions', models.TextField(blank=True, null=True)),
                ('physical_restrictions', models.TextField(blank=True, null=True)),
                ('has_seizures', models.BooleanField(default=False)),
                ('phone_number', models.CharField(max_length=15)),
                ('agency_state', models.CharField(blank=True, choices=[('Bol', 'Bolsa de Trabajo'), ('Emp', 'Empleado'), ('Des', 'Desempleado')], default='Bol', max_length=3, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('current_job', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='agencia.job')),
                ('cycle', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='candidatos.cycle')),
                ('domicile', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='candidatos.domicile')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user profile',
                'verbose_name_plural': 'historical user profiles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='JobHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='agencia.job')),
            ],
            options={
                'verbose_name': 'Job History',
            },
        ),
        migrations.CreateModel(
            name='JobHistoryComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.TextField(help_text='The actual text content of the comment.')),
                ('type', models.CharField(choices=[('info', 'Información'), ('success', 'Éxito'), ('warning', 'Advertencia'), ('error', 'Error')], default='info', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time the comment was created.')),
                ('author', models.ForeignKey(blank=True, help_text='The user who created this comment.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='job_history_comments', to=settings.AUTH_USER_MODEL)),
                ('job_history', models.ForeignKey(help_text='The job history entry this comment belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='candidatos.jobhistory')),
            ],
            options={
                'verbose_name': 'Job History Comment',
                'verbose_name_plural': 'Job History Comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user_photos/')),
                ('registration_date', models.DateField(auto_now_add=True, null=True)),
                ('birth_date', models.DateField(null=True)),
                ('gender', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1, null=True)),
                ('stage', models.CharField(choices=[('Reg', 'Registro'), ('Pre', 'Preentrevista'), ('Ent', 'Entrevista'), ('Cap', 'Capacitación'), ('Agn', 'Agencia'), ('Can', 'Canalización')], default='Reg', max_length=3, null=True)),
                ('curp', models.CharField(blank=True, max_length=18, null=True, validators=[django.core.validators.RegexValidator('^[A-Z]{4}\\d{6}[HM][A-Z]{2}[B-DF-HJ-NP-TV-Z]{3}[A-Z0-9]\\d{1}$', 'Enter a valid CURP')])),
                ('has_disability_certificate', models.BooleanField(default=False)),
                ('has_interdiction_judgment', models.BooleanField(default=False)),
                ('receives_pension', models.CharField(blank=True, choices=[('No', 'No'), ('Bie', 'Bienestar'), ('Orf', 'Orfandad'), ('Otr', 'Otra')], max_length=3, null=True)),
                ('receives_psychological_care', models.BooleanField(default=False)),
                ('receives_psychiatric_care', models.BooleanField(default=False)),
                ('social_security', models.CharField(blank=True, choices=[('IMSS', 'IMSS'), ('ISSSTE', 'ISSSTE'), ('PEMEX', 'PEMEX'), ('IMSS-BIENESTAR', 'IMSS-Bienestar'), ('PARTICULAR', 'Particular'), ('OTRO', 'Otro'), ('NINGUNO', 'Ninguno')], max_length=20, null=True)),
                ('blood_type', models.CharField(blank=True, choices=[('', '---------'), ('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], default='', max_length=3, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('dietary_restrictions', models.TextField(blank=True, null=True)),
                ('physical_restrictions', models.TextField(blank=True, null=True)),
                ('has_seizures', models.BooleanField(default=False)),
                ('phone_number', models.CharField(max_length=15)),
                ('agency_state', models.CharField(blank=True, choices=[('Bol', 'Bolsa de Trabajo'), ('Emp', 'Empleado'), ('Des', 'Desempleado')], default='Bol', max_length=3, null=True)),
                ('current_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='agencia.job')),
                ('cycle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='candidatos.cycle')),
                ('disability', models.ManyToManyField(blank=True, to='discapacidad.disability')),
                ('domicile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='candidatos.domicile')),
                ('emergency_contacts', models.ManyToManyField(blank=True, to='candidatos.emergencycontact')),
                ('medications', models.ManyToManyField(blank=True, to='candidatos.medication')),
            ],
        ),
        migrations.CreateModel(
            name='TAidCandidateHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_successful', models.CharField(blank=True, choices=[('intentando', 'Intentando'), ('funciono', 'Le funcionó'), ('no_funciono', 'No le funcionó')], default='intentando', max_length=20, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('aid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='discapacidad.technicalaid')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidatos.userprofile')),
            ],
            options={
                'verbose_name': 'Technical(Evaluación Diagnóstica) Aid History',
            },
        ),
        migrations.AddField(
            model_name='jobhistory',
            name='candidate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidatos.userprofile'),
        ),
        migrations.CreateModel(
            name='HistoricalSISAidCandidateHistory',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_successful', models.CharField(blank=True, choices=[('intentando', 'Intentando'), ('funciono', 'Le funcionó'), ('no_funciono', 'No le funcionó')], default='intentando', max_length=20, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('seccion', models.CharField(max_length=255)),
                ('item', models.CharField(max_length=255)),
                ('subitem', models.CharField(max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('aid', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='discapacidad.sishelp')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('candidate', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='candidatos.userprofile')),
            ],
            options={
                'verbose_name': 'historical SIS Aid History',
                'verbose_name_plural': 'historical SIS Aid Historys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='CHAidCandidateHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_successful', models.CharField(blank=True, choices=[('intentando', 'Intentando'), ('funciono', 'Le funcionó'), ('no_funciono', 'No le funcionó')], default='intentando', max_length=20, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('aid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='discapacidad.chitem')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidatos.userprofile')),
            ],
            options={
                'verbose_name': 'CH(Cuadro de Habilidades) Aid History',
            },
        ),
        migrations.CreateModel(
            name='SISAidCandidateHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_successful', models.CharField(blank=True, choices=[('intentando', 'Intentando'), ('funciono', 'Le funcionó'), ('no_funciono', 'No le funcionó')], default='intentando', max_length=20, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('seccion', models.CharField(max_length=255)),
                ('item', models.CharField(max_length=255)),
                ('subitem', models.CharField(max_length=255)),
                ('aid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='discapacidad.sishelp')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidatos.userprofile')),
            ],
            options={
                'verbose_name': 'SIS Aid History',
                'indexes': [models.Index(fields=['candidate'], name='candidatos__candida_41aa98_idx')],
            },
        ),
    ]
